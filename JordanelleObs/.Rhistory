}
Robust2(20,20,2,1)
Robust2(15,15,2,1)
Robust2(30,30,2,1)
Robust2(50,50,2,1)
Robust2(15,900,2,2)
Robust2(15,950,2,2)
Robust2(20,1000,2,2)
Robust2(15,20,2,2)
Robust2(15,20,2,2)
Robust2(15,20,2,2)
Robust2(20,20,2,2)
Robust2(1,1,2,2)
Robust2(2,2,2,2)
Robust2(20,20,2,1)
Robust2(15,15,2,1)
Robust2(30,30,2,1)
Robust2(50,50,2,1)
Robust2(15,900,2,2)
Robust2(15,950,2,2)
Robust2(20,1000,2,2)
Robust2(15,900,2,2)
Robust2(15,950,2,2)
Robust2(20,1000,2,2)
effect = function(factor){
obs = rnorm(100,1,1)
data = c(obs, obs + factor)
data = c(data, obs * factor)
category = c(rep('Original',100), rep('Addative',100), rep('Multiplicative',100) )
data = data.frame(data, category)
boxplot(data~category, data = data)
}
effect(2)
effect(3)
library('Sleuth3')
?ex0332
attach(ex0332)
head(ex0332)
#Analysis without transformation
boxplot(InState~Type)
shapiro.test(InState)
library('car')
leveneTest(InState~Type)
t.test(InState~Type, var.equal = FALSE)
### LOG transformation analysis
boxplot(log(InState)~Type)
shapiro.test(log(InState))
leveneTest(log(InState)~Type)
t.test(log(InState)~Type, var.equal = TRUE)
exp(1.065969)
exp(1.546419)
library('Sleuth3')
case0202
attach(case0202)
D = Unaffected - Affected
boxplot(Affected,Unaffected)
shapiro.test(D)
shapiro.test(log(D))
shapiro.test(Affected)
shapiro.test(Unaffected)
t.test(Affected,Unaffected) #Analysis method A
t.test(D) #Analysis method B
wilcox.test(D) #Analysis method C
wilcox.test(Affected,Unaffected, paired = FALSE) #Analysis method D
t.test(log(1+D))#Analysis method E
exp(0.0566)
exp(0.27044)
?case0202
library('Sleuth3')
attach(ex0431)
ex0431
?ex0431
boxplot(Survival~Group, data = ex0431)
control = Survival[which(Group == 'Control')]
length(control)#Number of observations in the control group
shapiro.test(control)
therapy = Survival[which(Group == 'Therapy')]
length(control)#Number of observations in the control group
shapiro.test(control)
library('car')
leveneTest(Survival~Group, data = ex0431)
leveneTest(log(Survival)~Group, data = ex0431)
boxplot(log(Survival)~Group, data = ex0431)
shapiro.test(log(Survival))
t.test(log(Survival)~Group,data = ex0431, var.equal = FALSE)
t.test(log(Survival)~Group,data = ex0431, var.equal = TRUE)
t.test(Survival~Group,data = ex0431, var.equal = FALSE)
wilcox.test(log(Survival)~Group,data = ex0431)
regression = function(n,p,sigma){
x = seq(0,1,length = n+1)
y= 3*x+1 +rnorm(n+1,0,sigma)
model.simple = lm(y~x)
model.poly = lm(y~poly(x,p))
print('Simple linear regression')
print(summary(model.simple))
print('Polynomial regression')
print(summary(model.poly))
plot(x,y, col = 'blue')
abline(model.simple)
lines(x,model.poly$fitted.values, col = 'red')
}
regression(5,5,.2)
library('Sleuth3')
str(case1002)
attach(case1002)
#Can we compare with a t-test?
data_eco = case1002[which(Type == "echolocating bats"),]
data_ne  = case1002[which(Type != "echolocating bats"),]
boxplot(data_eco$Energy,data_ne$Energy, names = c("Echo", "Not Echo"))
length(data_eco$Energy)
length(data_ne$Energy)
t.test(data_eco$Energy,data_ne$Energy)
## EXPLORATION
myPlotCode    <- ifelse(Type=="non-echolocating birds",24,21)
myPointColor  <- ifelse(Type=="echolocating bats","green","white")
plot(Energy ~ Mass, log="xy", xlab="Body Mass (g); Log Scale ",
ylab="In-Flight Energy Expenditure (W); Log Scale",
main="In-Flight Energy Expenditure Study",
pch=myPlotCode,bg=myPointColor,lwd=2, cex=1.5)
#A one variable regression with transformation
logEnergy  <- log(Energy)
logMass <- log(Mass)
myLm <- lm(logEnergy ~ logMass )
beta       <- myLm$coef
dummyMass  <- seq(5,800,length=50)
curve     <- exp(beta[1] + beta[2]*log(dummyMass) )
lines(curve ~ dummyMass)
summary(myLm)
#Regression
myLm2 <- lm(logEnergy ~ logMass + Type + logMass:Type)#Full model
plot(myLm2, which=1)
myLm3 <- lm(logEnergy ~ logMass + Type )#Full model
summary(myLm)
summary(myLm3)
anova(myLm3, myLm2)   # Test for interaction with extra ss F-test
anova(myLm3, myLm)
summary(myLm2)
library('Sleuth3')
?ex1026
attach(ex1026)
head(ex1026)
plot(log(Inhibit),(UVB))
model1 = lm((UVB)~log(Inhibit+.1))
summary(model1)
shapiro.test(model1$residuals)
plot(model1, which = 1)
model2 = lm((UVB)~log(Inhibit+.1)+Surface)
summary(model2)
shapiro.test(model2$residuals)
plot(model2, which = 1)
model3 = lm((UVB)~(log(Inhibit+.1)+Surface)^2 )
summary(model3)
shapiro.test(model3$residuals)
plot(model3, which = 1)
require(Sleuth3)
library(lattice)
attach(case1101)
help(case1101)
## EXPLORATION
xyplot(Metabol~Gastric|Sex*Alcohol, case1101, pch = 20, cex =3)
myPch <- ifelse(Sex=="Female",24,21)
source("~/Downloads/Ch11a.R", echo=TRUE)
myBg  <- ifelse(Alcohol=="Alcoholic","gray","white")
plot(Metabol~Gastric, pch=myPch,bg=myBg,cex=1.5)
legend(1,12, pch=c(24,24,21,21), pt.cex=c(1.5,1.5,1.5,1.5),
pt.bg=c("white","gray", "white", "gray"),
c("Non-alcoholic Females", "Alcoholic Females",
"Non-alcoholic Males", "Alcoholic Males"))
identify(Metabol ~ Gastric)
head(case1101)
#I'm starting without alcoholism in the model because there are so few alcoholics in the dataset
myLm1 <-   lm(Metabol ~ Gastric + Sex + Gastric:Sex)
plot(myLm1, which=1)
plot(myLm1, which=4) # Show Cook's Distance; note cases 31 and 32.
plot(myLm1, which=5) # Note leverage and studentized residual for cases 31 and 32.
subject  <- 1:32  # Create ID number from 1 to 32
# Refit model without cases 31 and 32:
myLm2 <- update(myLm1, ~ ., subset = (subject !=31 & subject !=32))
plot(myLm2,which=1)
plot(myLm2,which=4)
plot(myLm2,which=5)
summary(myLm1)
summary(myLm2) # Significance of interaction terms hinges on cases 31 and 32.
#model refinement
# does alcoholism matter?
fullmodel <- lm(Metabol ~ Gastric*Alcohol*Sex)
fullmodel <- update(fullmodel, ~ ., subset = (subject !=31 & subject !=32))
summary(fullmodel)
Redmodel <- lm(Metabol ~ Gastric + Sex + Gastric:Sex)
Redmodel <- update(Redmodel, ~ ., subset = (subject !=31 & subject !=32))
summary(Redmodel)
anova(Redmodel, fullmodel)
myLm3 <- update(myLm2, ~ . - Gastric:Sex, subset = (subject !=31 & subject !=32)) #Drop interaction (without 31,32).
summary(myLm3)
if(require(car)){   # Use the car library
crPlots(myLm3) # Show partial residual (component + residual) plots.
}
help(crPlots)
## INFERENCE AND INTERPRETATION
summary(myLm3)
confint(myLm3,2:3)
## DISPLAY FOR PRESENTATION
myCol <- ifelse(Sex=="Male","blue","red")
plot(Metabol ~ Gastric,
xlab=expression("Gastric Alcohol Dehydrogenase Activity in Stomach ("*mu*"mol/min/g of Tissue)"),
ylab="First-pass Metabolism in the Stomach (mmol/liter-hour)",
main="First-Pass Alcohol Metabolism and Enzyme Activity for 18 Females and 14 Males",
pch=myPch, bg=myBg,cex=1.75, col=myCol, lwd=1)
legend(0.8,12.2, c("Females", "Males"), lty=c(1,2),
pch=c(24,21), pt.cex=c(1.75,1.75), col=c("red", "blue"))
dummyGastric <- seq(min(Gastric),3,length=100)
beta <- myLm3$coef
curveF <- beta[1] + beta[2]*dummyGastric
curveM <- beta[1] + beta[2]*dummyGastric + beta[3]
lines(curveF ~ dummyGastric, col="red")
lines(curveM ~ dummyGastric, col="blue",lty=2)
text(.8,10,"gray indicates alcoholic",cex = .8, adj=0)
case1101$Fem <- ifelse(Sex == "Female", 1, 0)
attach(case1101)
myLm3 <- lm(Metabol ~ Fem + Gastric + Gastric:Fem, subset = (subject !=31 & subject !=32))
myLm4 <- lm(Metabol ~ 0 + Gastric + Gastric:Fem, subset = (subject !=31 & subject !=32))
anova(myLm4, myLm3)
summary(myLm4)
## INFERENCE AND INTERPRETATION
summary(myLm4)
confint(myLm4,2:3)
plot(myLm4)
1.5989*2
confint(myLm4)
2*1.343039
2*1.8548110
## INFERENCE AND INTERPRETATION
summary(myLm4)
plot(Metabol ~ Gastric,
xlab=expression("Gastric Alcohol Dehydrogenase Activity in Stomach ("*mu*"mol/min/g of Tissue)"),
ylab="First-pass Metabolism in the Stomach (mmol/liter-hour)",
main="First-Pass Alcohol Metabolism and Enzyme Activity for 18 Females and 14 Males",
pch=myPch, bg=myBg,cex=1.75, col=myCol, lwd=1)
legend(0.8,12.2, c("Females", "Males"), lty=c(1,2),
pch=c(24,21), pt.cex=c(1.75,1.75), col=c("red", "blue"))
dummyGastric <- seq(min(Gastric),3,length=100)
beta <- myLm4$coef
curveF <- beta[1] + beta[2]*dummyGastric
curveM <- beta[1] + beta[2]*dummyGastric + beta[3]
lines(curveF ~ dummyGastric, col="red")
lines(curveM ~ dummyGastric, col="blue",lty=2)
text(.8,10,"gray indicates alcoholic",cex = .8, adj=0)
beta
curveF <- beta[1]*dummyGastric + beta[2]*dummyGastric
curveM <- beta[1]*dummyGastric
lines(curveF ~ dummyGastric, col="red")
lines(curveM ~ dummyGastric, col="blue",lty=2)
## DISPLAY FOR PRESENTATION
myCol <- ifelse(Sex=="Male","blue","red")
plot(Metabol ~ Gastric,
xlab=expression("Gastric Alcohol Dehydrogenase Activity in Stomach ("*mu*"mol/min/g of Tissue)"),
ylab="First-pass Metabolism in the Stomach (mmol/liter-hour)",
main="First-Pass Alcohol Metabolism and Enzyme Activity for 18 Females and 14 Males",
pch=myPch, bg=myBg,cex=1.75, col=myCol, lwd=1)
legend(0.8,12.2, c("Females", "Males"), lty=c(1,2),
pch=c(24,21), pt.cex=c(1.75,1.75), col=c("red", "blue"))
dummyGastric <- seq(min(Gastric),3,length=100)
beta <- myLm4$coef
curveF <- beta[1]*dummyGastric + beta[2]*dummyGastric
curveM <- beta[1]*dummyGastric
lines(curveF ~ dummyGastric, col="red")
lines(curveM ~ dummyGastric, col="blue",lty=2)
text(.8,10,"gray indicates alcoholic",cex = .8, adj=0)
beta[1]
beta[2]
dumyGastric
dummyGastric
confint(myLm4)
predict(myLm4,2,interval="predict")
case1101
newdata = data.frame(Gastric=2)
predict(myLm4, newdata, interval = "predict")
myLm4
newdata = data.frame(Gastric=2)
newdata
preditct(myLm4, newdata, interval="confidence")
predict(myLm4, newdata, interval="confidence")
newdata - data.frame(Gastric=2,Fem=0)
newdata - data.frame(c(Gastric=2,Fem=0))
c(Gastric=2,Fem-0)
newdata
data.frame(Gastric=2,Fem=0)
newdata = data.frame(Gastric=2,Fem=0)
predict(myLm4, newdata, interval="predict")
predict(myLm4, newdata, interval="confidence")
library('Sleuth3')
attach(ex0826)
head(ex0826)
pairs(log(Life)~log(Mass)+log(Metab))
model1 = lm(log(Life)~(log(Mass)+log(Metab))^2)
summary(model1)
plot(model1)
model2 = lm(log(Life)~(log(Mass)+log(Metab)))
summary(model2)
plot(model2)
remove = c(8,88,86,85,95)
print('potential outliers/infulential observations')
print(ex0826[remove,])
data.remove = ex0826[-remove,]
model1.R = lm(log(Life)~(log(Mass)+log(Metab))^2, data=data.remove)
summary(model1.R)
plot(model1.R)
model2.R = lm(log(Life)~(log(Mass)+log(Metab)),data = data.remove)
summary(model2.R)
plot(model2.R)
library("Slueth3")
library("Sleuth3")
ex1222
attach(ex1222)
pairs(as.factor(ex1222))
df = as.factor(ex1222)
df
df = ex[2:13]
df = ex1222[2:13]
pairs(Buchanan2000~.+as.factor(County), data=df)
df = ex1222[2:12]
pairs(Buchanan2000~., data=df)
library(leaps)
#Forward model selection
regfit.fwd=regsubsets(Buchanan2000~.,data = df, nvmax=77, method ="forward") #backward or forward
summary(regfit.fwd)
reg.summary=summary(regfit.fwd)
names(reg.summary)#This shows the types of error we can display by the number of variables in the model
#We use BIC to select the best model/number of variables
plot(reg.summary$bic, xlab= "Number of variables", ylab = "BIC",type = 'l')
min_bic = which.min(reg.summary$bic ) [1]
print(min_bic) #The number of variables accorind to BIC
points(min_bic,reg.summary$bic [min_bic],col="red",cex=2,pch=20)#The graph shows the minimum value or best model by the BIC
coef(regfit.full ,min_bic)
coef(regfit.fwd ,min_bic)
regfit.fwd
min_bic
require(Sleuth3)
help(case1301)
str(case1301)
attach(case1301)
head(case1301)
seaweed$ratio <- Cover/(100 - Cover)
seaweed$logRatio  <- log(seaweed$ratio)
logRatio = log(seaweed$ratio)
seaweed$ratio <- Cover/(100 - Cover)
attach(case1301)
head(case1301)
seaweed$ratio <- Cover/(100 - Cover)
seaweed$logRatio  <- log(seaweed$ratio)
logRatio = log(seaweed$ratio)
attach(seaweed)
case1301
require(Sleuth3)
help(case1301)
str(case1301)
attach(case1301)
head(case1301)
seaweed$ratio <- Cover/(100 - Cover)
seaweed <- data.frame(case1301)
seaweed <- data.frame(case1301)
seaweed <- data.frame(case1301)
attach(seaweed)
seaweed$ratio <- Cover/(100 - Cover)
seaweed$logRatio  <- log(seaweed$ratio)
logRatio = log(seaweed$ratio)
attach(seaweed)
#run an anova
myaov1 <- aov(logRatio ~ Block*Treat)
summary(myaov1)
myaov2 <- aov(logRatio ~ Block+Treat)
summary(myaov2)
#regression
myLm2 <- lm(logRatio ~ Block + Treat + Block:Treat)
summary(myLm2)
myLm3  <- lm(logRatio ~ Block + Treat)
anova(myLm3, myLm2) # Test for interaction with extra ss F-test
summary(myLm3)
library("Sleuth3")
library("leaps")
head(ex01222)
head(ex1222)
attach(ex1222)
df = ex1222
df
df = df[-67]
df
df = df[-67,]
df
df = ex1222
df = df[-67,]
head(ex1222)
pairs(Buchanan2000~.,data=df)
pairs(Buchanan2000~.-County,data=df)
head(case1202)
pairs(log(Bsal)~.-Sal77, data = case1202)
pairs(Buchanan2000~Gore2000+Bush2000+Nader2000+Browne2000+Total2000,data=df)
head(ex1222)
pairs(Buchanan2000~Gore2000+Bush2000+Nader2000+Browne2000+Total2000+Clington96+Dole96+Perot96+Buchanan96p+ReformReg+TotalReg,data=df)
pairs(Buchanan2000~Gore2000+Bush2000+Nader2000+Browne2000+Total2000+Clinton96+Dole96+Perot96+Buchanan96p+ReformReg+TotalReg,data=df)
shapiro.test(Buchanan2000)
shapiro.test(log(Buchanan2000))
pairs(log(Buchanan2000)~Gore2000+Bush2000+Nader2000+Browne2000+Total2000+Clinton96+Dole96+Perot96+Buchanan96p+ReformReg+TotalReg,data=df)
model1 = lm(log(Buchanan2000)~.)
model1 = lm(log(Buchanan2000)~., data=df)
summary(model1)
model1 = lm(log(Buchanan2000)~.-County, data=df)
summary(model1)
model1 = lm(log(Buchanan2000)~.-County-Total2000, data=df)
summary(model1)
regfit.fwd=regsubsets(log(Buchanan2000)~.-County,data = df, nvmax=19, method ="forward")
summary(regfit.fwd)
summary(regfit.fwd)
names(reg.summary)
reg.summary=summary(regfit.fwd)
names(reg.summary)
plot(reg.summary$bic, xlab= "Number of variables", ylab = "BIC",type = 'l')
min_bic = which.min(reg.summary$bic ) [1]
print(min_bic) #The number of variables accorind to BIC
points(min_bic,reg.summary$bic [min_bic],col="red",cex=2,pch=20)#The graph shows the minimum value or best model by the BIC
coef(regfit.full ,min_bic)
coef(regfit.fwd ,min_bic)
summary(regfit.fwd)
model2 = lm(log(Buchanan2000)~Bush2000+Browne2000+Clinton96+Buchanan96p+ReformReg, data=df)
summary(model2)
plot(model2)
model2 = lm(log(Buchanan2000)~Bush2000+Clinton96+Buchanan96p+ReformReg, data=df)
summary(model2)
plot(model2)
model3 = lm(Buchanan2000~Bush2000+Clinton96+Buchanan96p+ReformReg, data=df)
summary(model2)
plot(model3)
regfit.fwd=regsubsets(Buchanan2000~.-County,data = df, nvmax=19, method ="forward")
summary(regfit.fwd)
reg.summary=summary(regfit.fwd)
names(reg.summary)
plot(reg.summary$bic, xlab= "Number of variables", ylab = "BIC",type = 'l')
min_bic = which.min(reg.summary$bic ) [1]
print(min_bic) #The number of variables accorind to BIC
points(min_bic,reg.summary$bic [min_bic],col="red",cex=2,pch=20)#The graph shows the minimum value or best model by the BIC
model2 = lm(log(Buchanan2000)~Gore2000+Bush2000+Nader2000+Browne2000+Perot96+ReformReg, data=df)
model2 = lm(Buchanan2000~Gore2000+Bush2000+Nader2000+Browne2000+Perot96+ReformReg, data=df)
summary(model2)
plot(model2)
model2 = lm(Buchanan2000~Gore2000+Bush2000+Nader2000+Perot96+ReformReg, data=df)
summary(model2)
plot(model2)
shapiro.test(model2$residuals)
model2 = lm(log(Buchanan2000)~Gore2000+Bush2000+Nader2000+Perot96+ReformReg, data=df)
model2 = lm(log(Buchanan2000)~Gore2000+Bush2000+Nader2000+Perot96+ReformReg, data=df)
shapiro.test(model2$residuals)
shapiro.test(model2$residuals)
plot(model2)
names(reg.summary)
regfit.fwd=regsubsets(log(Buchanan2000)~.-County,data = df, nvmax=19, method ="forward")
summary(regfit.fwd)
reg.summary=summary(regfit.fwd)
names(reg.summary)
plot(reg.summary$bic, xlab= "Number of variables", ylab = "BIC",type = 'l')
min_bic = which.min(reg.summary$bic ) [1]
print(min_bic) #The number of variables accorind to BIC
points(min_bic,reg.summary$bic [min_bic],col="red",cex=2,pch=20)#The graph shows the minimum value or best model by the BIC
coef(regfit.fwd ,min_bic)
model3 = lm(Buchanan2000~Bush2000+Clinton96+Buchanan96p+ReformReg, data=df)
summary(model2)
shapiro.test(model3$residuals)
model3 = lm(log(Buchanan2000)~Bush2000+Clinton96+Buchanan96p+ReformReg, data=df)
shapiro.test(model3$residuals)
shapiro.test(Buchanan2000)
shapiro.test(log(Buchanan2000))
summary(regfit.fwd)
summary(model3)
model4 = model3 = lm(log(Buchanan2000)~Bush2000+Clinton96+Buchanan96p+ReformReg+Browne2000, data=df)
anova(model3,model4)
model3 = lm(log(Buchanan2000)~Bush2000+Clinton96+Buchanan96p+ReformReg, data=df)
summary(model3)
model4 = model3 = lm(log(Buchanan2000)~Bush2000+Clinton96+Buchanan96p+ReformReg+Browne2000, data=df)
anova(model3,model4)
model3 = lm(log(Buchanan2000)~Bush2000+Clinton96+Buchanan96p+ReformReg, data=df)
model4 = lm(log(Buchanan2000)~Bush2000+Clinton96+Buchanan96p+ReformReg+Browne2000, data=df)
anova(model3,model4)
summary(model4)
shapiro.test(model4$residuals)
plot(model4)
ex1222
summary(model4)
ex1222[67,]
testdf = df(c(152846,230621,8788,9,743))
testdf = data.frame(c(152846,230621,8788,9,743))
predict(model4, testdf)
predict(model4, newdata = testdf)
testdf
predict(model4, ex1222)
predict(model4, ex1222[67,])
exp(5.264657)
ex12222[67,]
ex1222[67,]
df4
df = read.csv("DataCollected.csv")
setwd("~/Documents/JordanelleObs")
df = read.csv("DataCollected.csv")
df2 = df
# Correct data for atmospheric pressure (Obtained from wunderground.com)
df2[df2$Model == 0,4:15] = df2[df2$Model == 0,4:15] * (1013/864.88)
df2[df2$Model == 1,4:15] = df2[df2$Model == 1,4:15] * (1013/864.54)
# Move Air Rate from FPM to FPS
df2[,4:15] = df2[,4:15] / 60
df3 = df2[c(1,2,5,6,7,8),]
df4 = df2[,4:15]
df4
df2
1013/864.88
